os:
  - linux
dist: focal
arch:
  - arm64
sudo: required
language: cpp
compiler:
  - gcc
git:
  depth: false

# This project also uses Coverity Scan https://scan.coverity.com/
# However, the Travis coverity scan addon (as of 19.02.2014) does not fit our needs,
# because then all builds are done as coverity scans and results send to the server.
# Therefore we reused the old method
# (setting environment variables, download and execute a script).

env:
    global:
        - BAREOS_VERSION="unknown"
        # -- BEGIN Coverity Scan ENV
        # The build command with all of the arguments that you would apply to a manual `cov-build`
        # Usually this is the same as STANDARD_BUILD_COMMAND, excluding the automated test arguments
        - COVERITY_SCAN_BUILD_COMMAND="make -C obj-x86_64-linux-gnu"
        # Name of the project
        - COVERITY_SCAN_PROJECT_NAME="bareos/bareos"
        # Email address for notifications related to this build
        - COVERITY_SCAN_NOTIFICATION_EMAIL="coverity@bareos.org"
        # Regular expression selects on which branches to run analysis
        # Be aware of quotas. Do not run on every branch/commit
        - COVERITY_SCAN_BRANCH_PATTERN="master"
        # COVERITY_SCAN_TOKEN: is set as secure settings in the travis-ci.org configuration
        - COVERITY_SCAN_BUILD_URL="https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh"
        - COVERITY_SCAN_BUILD="curl -s $COVERITY_SCAN_BUILD_URL | bash"
        # -- END Coverity Scan ENV

matrix:
  include:
    - env: DB=postgresql
    - env: DB=mysql
    - env: DB=sqlite3
    - env: DB=postgresql COVERITY_SCAN=1
    - env: DB=postgresql BUILD_WEBUI=true
      addons:
        sauce_connect: true
    - env: DB=postgresql
      compiler: clang
  allow_failures:
    - env: DB=postgresql BUILD_WEBUI=true
    - env: DB=postgresql COVERITY_SCAN=1



before_install:
    # install build dependencies
    - .travis/travis_before_install.sh

before_script:
    # changelog file is required (and normally generated by Jenkins)
    - cmake -P write_version_files.cmake
    - BAREOS_VERSION=$(cmake -P get_version.cmake | sed -e 's/-- //')
    - printf "bareos (%s) unstable; urgency=low\n\n  * dummy\n\n -- nobody <nobody@example.com>  %s\n\n" "${BAREOS_VERSION}" "${NOW}" | tee debian/changelog
    # - printf "bareos (19.0.0~pre-1) unstable; urgency=low\n\n  * dummy\n\n -- nobody <nobody@example.com>  Tue, 01 Jan 2019 00:00:00 +0000\n\n" > core/debian/changelog
    # - printf "bareos-webui (19.0.0~pre-1) unstable; urgency=low\n\n  * dummy\n\n -- nobody <nobody@example.com>  Tue, 01 Jan 2019 00:00:00 +0000\n\n" > webui/debian/changelog
    # build and install Bareos packages
    - .travis/travis_before_script.sh

#script:
#    # run test script
#    - if [ -z "${COVERITY_SCAN}" ]; then sudo -E $PWD/.travis/all; fi

addons:
    hosts:
        - bareos.example.com

